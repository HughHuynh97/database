name: ci

on:
  push:
    branches:
      - 'master'
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Setup Maven Action
        uses: s4u/setup-maven-action@v1.2.1
        with:
          java-version: 17
          maven-version: 3.8.4
          
      - name: Build with Maven
        run: mvn clean install
     
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
          
      - name: Artifact Job
        uses: actions/upload-artifact@v3
        with:
          name: jar-file
          path: target/
          
  quality-check:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
            
    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: 17
        
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
        
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        GITHUB_TOKEN: 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
        SONAR_TOKEN: 71533cd68f70929b0458cf743118b4d73dfede47
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        
    - name: SonarQube Quality Gate check
      uses: sonarsource/sonarqube-quality-gate-action@master
      # Force to fail step after specific time
      timeout-minutes: 5
      env:
       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}       
        
  pack:
    runs-on: ubuntu-latest
    needs: [build, quality-check]
    steps: 
      - name: Checkout
        uses: actions/checkout@v1
        
      - name: Download artifact
        uses: actions/download-artifact@v1
        with:
            name: jar-file
            path: target/
            
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/database:latest     
          
          
